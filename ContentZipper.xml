<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ContentZipper</name>
    </assembly>
    <members>
        <member name="T:ContentZipper.UnZipper">
            <summary>
            This class provides the necessary functionality to UnZip the contents into a folder.
            </summary>
        </member>
        <member name="M:ContentZipper.UnZipper.#ctor(System.String,System.String,System.Action{System.Object})">
            <summary>
            
            </summary>
            <param name="sourcePath">The source path of the Zip file. </param>
            <param name="targetPath">The target path where the Zip file has to be unzipped. </param>
            <param name="progressUpdater">A callback delegate to know about the progress. </param>
        </member>
        <member name="M:ContentZipper.UnZipper.UnZip">
            <summary>
            UnZip the contents.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ContentZipper.UnZipper.Cancel">
            <summary>
            Cancels the UnZip Task.
            </summary>
        </member>
        <member name="P:ContentZipper.UnZipper.ZipStatus">
            <summary>
            Returns the status of the UnZip operation.
            </summary>
        </member>
        <member name="P:ContentZipper.UnZipper.Exception">
            <summary>
            Returns any exception occurred during the UnZip operation.
            </summary>
        </member>
        <member name="M:ContentZipper.UnZipper.getTotalItemsToProcess">
            <summary>
            Returns the total number of items to process.
            </summary>
        </member>
        <member name="M:ContentZipper.UnZipper.getProgress">
            <summary>
            Returns the number of items processed.
            </summary>
        </member>
        <member name="M:ContentZipper.UnZipper.getProcessingItem">
            <summary>
            Returns the current processing item's path.
            </summary>
        </member>
        <member name="M:ContentZipper.UnZipper.initialize">
            <summary>
            Initialize the fields.
            </summary>
        </member>
        <member name="M:ContentZipper.UnZipper.unZipItems">
            <summary>
            UnZip the contents.
            </summary>
        </member>
        <member name="M:ContentZipper.UnZipper.setProcessingItem(System.String)">
            <summary>
            Sets the current item being processed.
            </summary>
        </member>
        <member name="M:ContentZipper.UnZipper.incrementProgress">
            <summary>
            Increments the progress count and issues an notification to the caller.
            </summary>
        </member>
        <member name="M:ContentZipper.UnZipper.updateProgress(System.Int32)">
            <summary>
            Issues notification about the operation to the caller by invoking the callback method.
            </summary>
        </member>
        <member name="M:ContentZipper.UnZipper.doCleanup">
            <summary>
            Does a clean up in the target path.
            </summary>
        </member>
        <member name="T:ContentZipper.ZipStatus">
            <summary>
            Zip operation statuses.
            </summary>
        </member>
        <member name="T:ContentZipper.DirectoryProcessingOptions">
            <summary>
            Various options on how the directory contents are to be processed.
            </summary>
        </member>
        <member name="T:ContentZipper.Zipper">
            <summary>
            This class provides the necessary functionality to Zip the contents into a folder.
            </summary>
        </member>
        <member name="M:ContentZipper.Zipper.#ctor(System.String,System.String,System.Boolean,System.Boolean,ContentZipper.DirectoryProcessingOptions,System.Action{System.Object})">
            <summary>
            
            </summary>
            <param name="sourcePath">The source path of the file or a folder. </param>
            <param name="targetPath">The target path for the Zip file. </param>
            <param name="isFolderPath">Specify whether the source path is a folder path or a file path. </param>
            <param name="overwriteTargetIfExists">Specify whether to override the target file if it already exists or not. </param>
            <param name="directoryProcessingOptions">Specify how the directory (sourcePath is a folder path) must be processed for the Zip opertion. </param>
            <param name="progressUpdater">A callback delegate to know about the progress. </param>
        </member>
        <member name="M:ContentZipper.Zipper.Zip(System.IO.Compression.CompressionLevel)">
            <summary>
            Zip the contents.
            </summary>
            <param name="compressionLevel">Specify the compression level for the operation. </param>
            <returns></returns>
        </member>
        <member name="M:ContentZipper.Zipper.Cancel">
            <summary>
            Cancels the Zip Task.
            </summary>
        </member>
        <member name="P:ContentZipper.Zipper.ZipStatus">
            <summary>
            Returns the status of the Zip operation.
            </summary>
        </member>
        <member name="P:ContentZipper.Zipper.Exception">
            <summary>
            Returns any exception occurred during the Zip operation.
            </summary>
        </member>
        <member name="M:ContentZipper.Zipper.getTotalItemsToProcess">
            <summary>
            Returns the total number of items to process.
            </summary>
        </member>
        <member name="M:ContentZipper.Zipper.getProgress">
            <summary>
            Returns the number of items processed.
            </summary>
        </member>
        <member name="M:ContentZipper.Zipper.getProcessingItem">
            <summary>
            Returns the current processing item's path.
            </summary>
        </member>
        <member name="M:ContentZipper.Zipper.initialize">
            <summary>
            Initialize the fields.
            </summary>
        </member>
        <member name="M:ContentZipper.Zipper.zipItems(System.IO.Compression.CompressionLevel)">
            <summary>
            Zip the contents.
            </summary>
        </member>
        <member name="M:ContentZipper.Zipper.zipDirectory(System.String,System.IO.Compression.ZipArchive,System.String,System.IO.Compression.CompressionLevel,ContentZipper.DirectoryProcessingOptions,System.Threading.CancellationToken)">
            <summary>
            Zip the given directory.
            </summary>
        </member>
        <member name="M:ContentZipper.Zipper.setProcessingItem(System.String)">
            <summary>
            Sets the current item being processed.
            </summary>
        </member>
        <member name="M:ContentZipper.Zipper.incrementProgress">
            <summary>
            Increments the progress count and issues an notification to the caller.
            </summary>
        </member>
        <member name="M:ContentZipper.Zipper.updateProgress(System.Int32)">
            <summary>
            Issues notification about the operation to the caller by invoking the callback method.
            </summary>
        </member>
        <member name="M:ContentZipper.Zipper.doCleanup">
            <summary>
            Does a clean up in the target path.
            </summary>
        </member>
    </members>
</doc>
